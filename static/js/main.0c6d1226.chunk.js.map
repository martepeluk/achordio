{"version":3,"sources":["chords/chord.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Chord","props","chordList","notes","map","note","className","noteValueToString","0","1","2","3","4","5","6","7","8","9","10","11","flatNoteValue","App","state","baseNote","sharp","third","seventh","onChangeNote","bind","onChangeSharp","onChangeThird","onChangeSeventh","calculateChordFromBaseNote","event","noteValue","target","value","curState","this","setState","sharpValue","thirdValue","seventhValue","calculateNoteFromBaseNoteAndDiff","diff","onChange","type","name","defaultChecked","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c6d1226.chunk.js","sourcesContent":["import React from 'react';\nimport './chord.css'\n\nfunction Chord(props: any) {\n    const notes = props.notes;\n    const chordList = notes.map((note: string) => <li key={note}>\n        {note}\n    </li>\n    );\n    return (\n        <div>\n            <ul className=\"chord-list\">{chordList}</ul>\n        </div>\n    );\n}\n\nexport default Chord;","import React from 'react';\nimport './App.css';\nimport Chord from './chords/chord';\n\nconst noteValueToString: Record<number, string> = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B'\n}\n\nconst flatNoteValue: Record<number, string> = {\n  0: 'C',\n  1: 'Db',\n  2: 'D',\n  3: 'Eb',\n  4: 'E',\n  5: 'F',\n  6: 'Gb',\n  7: 'G',\n  8: 'Ab',\n  9: 'A',\n  10: 'Bb',\n  11: 'B'\n}\n\n// third = 0 is a major third\nclass App extends React.Component<{}, {baseNote: number, sharp: number, third: number, seventh: number}> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      baseNote: 0,\n      sharp: 0,\n      third: 0,\n      seventh: -1\n    };\n    this.onChangeNote = this.onChangeNote.bind(this);\n    this.onChangeSharp = this.onChangeSharp.bind(this);\n    this.onChangeThird = this.onChangeThird.bind(this);\n    this.onChangeSeventh = this.onChangeSeventh.bind(this);\n    this.calculateChordFromBaseNote = this.calculateChordFromBaseNote.bind(this);\n  }\n\n  onChangeNote(event: any) {\n    var noteValue: number = +event.target.value;\n    var curState = {...this.state}\n    curState.baseNote = noteValue\n    this.setState(curState);\n  }\n\n  onChangeSharp(event: any) {\n    var sharpValue: number = +event.target.value;\n    var curState = {...this.state}\n    curState.sharp = sharpValue\n    this.setState(curState);\n  }\n\n  onChangeThird(event: any) {\n    var thirdValue: number = +event.target.value;\n    var curState = {...this.state}\n    curState.third = thirdValue\n    this.setState(curState);\n  }\n\n  onChangeSeventh(event: any) {\n    var seventhValue: number = +event.target.value;\n    var curState = {...this.state}\n    curState.seventh = seventhValue\n    this.setState(curState);\n  }\n\n  calculateChordFromBaseNote(): string[] {\n    if (this.state.baseNote < 0) {\n      return [];\n    }\n    var baseNote: number = (this.state.baseNote + this.state.sharp + 12) % 12;\n\n    let prime : string = this.calculateNoteFromBaseNoteAndDiff(baseNote, 0)\n    let third : string = this.calculateNoteFromBaseNoteAndDiff(baseNote + 4, this.state.third)\n    let fifth : string = this.calculateNoteFromBaseNoteAndDiff(baseNote + 7, 0)\n    let seventh : string = this.calculateNoteFromBaseNoteAndDiff(baseNote + 11, this.state.seventh)\n\n    var noteStringList: string[] = [prime, third, fifth, seventh];\n    return noteStringList;\n  }\n\n  calculateNoteFromBaseNoteAndDiff(baseNote: number, diff: number) : string {\n    if (this.state.sharp >= 0) \n    {\n      return noteValueToString[(baseNote + diff + 12) % 12]\n    } else {\n      if (diff < 0) {\n        return flatNoteValue[(baseNote + diff + 12) % 12]\n      } else {\n        return noteValueToString[(baseNote + diff + 12) % 12]\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div onChange={this.onChangeNote}>\n          <input type=\"radio\" value=\"0\" name=\"note\" defaultChecked/> C\n          <input type=\"radio\" value=\"2\" name=\"note\" /> D\n          <input type=\"radio\" value=\"4\" name=\"note\" /> E\n          <input type=\"radio\" value=\"5\" name=\"note\" /> F\n          <input type=\"radio\" value=\"7\" name=\"note\" /> G\n          <input type=\"radio\" value=\"9\" name=\"note\" /> A\n          <input type=\"radio\" value=\"11\" name=\"note\" /> H\n        </div>\n\n        <div onChange={this.onChangeSharp}>\n          <input type=\"radio\" value=\"1\" name=\"sharp\" /> #\n          <input type=\"radio\" value=\"0\" name=\"sharp\" defaultChecked/> none\n          <input type=\"radio\" value=\"-1\" name=\"sharp\" /> b\n        </div>\n\n        <div onChange={this.onChangeThird}>\n          <input type=\"radio\" value=\"-1\" name=\"third\" /> minor3\n          <input type=\"radio\" value=\"0\" name=\"third\" defaultChecked/> major3\n        </div>\n\n        <div onChange={this.onChangeSeventh}>\n          <input type=\"radio\" value=\"-1\" name=\"seventh\" defaultChecked/> minor7\n          <input type=\"radio\" value=\"0\" name=\"seventh\"/> major7\n        </div>\n\n        <Chord notes={this.calculateChordFromBaseNote()}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}